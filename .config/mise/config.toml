[tools]
# global tool versions go here
# you can set these with `mise use -g`
"node" = "latest"
# npm tool
"npm:eslint" = "latest"
"npm:prettier" = "latest"
"npm:typescript" = "latest"
"npm:eslint-config-prettier" = "latest"
"npm:eslint-plugin-prettier" = "latest"
"npm:npkill" = "latest"
"npm:npm-check" = "latest"
"npm:mem0ai" = "latest"
"asdf:mise-plugins/mise-sops" = "3.10.2"
"asdf:threkk/asdf-age" = "1.2.1"
bun = "latest"

[env]
[env._]
# Specifies the path to a JSON file that stores environment variables.
file = "/Users/mh/.local/share/secrets/env.json"

# Automatic virtualenv activation configuration for Python.
#python.venv = { path = ".venv", create = true } # Path to the virtualenv and whether to create it if it doesn't exist.

[settings]
# Enables automatic activation of uv-managed virtualenvs for Python.
python.uv_venv_auto = true

# Configures `mise install` to always keep downloaded archives.
always_keep_download = false # Deleted after install by default
always_keep_install = false  # Deleted on failure by default

# configure how frequently (in minutes) to fetch updated plugin repository changes
# (note: this isn't currently implemented but there are plans to add it: https://github.com/jdx/mise/issues/128)
plugin_autoupdate_last_check_duration = '1 week' # set to 0 to disable updates
verbose = false
http_timeout = "30s"                             # Set the timeout for http requests as duration string, see `MISE_HTTP_TIMEOUT`
jobs = 4                                         # Number of plugins or runtimes to install in parallel. The default is `4`.
raw = false                                      # set to true to directly pipe plugins to stdin/stdout/stderr
yes = false                                      # set to true to automatically answer yes to all prompts
not_found_auto_install = true                    # Automatically installs tools if they're not found.
experimental = true                              # Enables experimental features.

[settings.pipx]
# pipx specific settings
uvx = true # enable uv integration with pipx

[settings.status]
# Configuration for status display
#show_env = true # show environment in status command

[hooks]
cd = "echo 'I changed directories'"
enter = "echo 'I entered the project'"
leave = "echo 'I left the project'"
preinstall = "echo 'I am about to install tools'"
postinstall = "echo 'I just installed tools'"
